steps:
  - name: python
    entrypoint: pip
    args: [ "install", "google-cloud-secret-manager", "--user" ]

  - name: python
    entrypoint: python
#    args: [ "load_settings.py", download , $PROJECT_NUMBER ]
    args: [ "secret_manager.py", download , "settings.toml", tap_settings_files, $PROJECT_NUMBER ]
    id: load_settings_toml

  - name: python
    entrypoint: python
    args: [ "secret_manager.py", download , "util/mqtt.crt", mqtt_ca_crt, $PROJECT_NUMBER ]
#    args: [ "mqtt.crt", download , $PROJECT_NUMBER ]
    id: MQTT_ca_crt

  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--no-cache'
      - '-t'
#      - '$_GCR_HOSTNAME/$PROJECT_ID/$_REGISTRY_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$_REGISTRY_NAME/$_SERVICE_NAME:latest'
      - .
      - '-f'
      - Dockerfile
    id: Build
  - name: gcr.io/cloud-builders/docker
    args:
      - push
#      - '$_GCR_HOSTNAME/$PROJECT_ID/$_REGISTRY_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$_REGISTRY_NAME/$_SERVICE_NAME:latest'
    id: Push
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - deploy
      - $_SERVICE_NAME
      - '--no-cpu-throttling'
      - '--min-instances=1'
      - '--max-instances=2'
      - '--concurrency=2'
      - '--platform=managed'
#      - '--image=$_GCR_HOSTNAME/$PROJECT_ID/$_REGISTRY_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '--image=$_GCR_HOSTNAME/$PROJECT_ID/$_REGISTRY_NAME/$_SERVICE_NAME:latest'
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID,$_LABELS
      - '--region=$_DEPLOY_REGION'
      - '--quiet'
    id: Deploy
    entrypoint: gcloud
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - add-iam-policy-binding
      - $_SERVICE_NAME
      - '--member=allUsers'
      - '--role=roles/run.invoker'
      - '--region=$_DEPLOY_REGION'
    id: Security
    entrypoint: gcloud
images:
#  - '$_GCR_HOSTNAME/$PROJECT_ID/$_REGISTRY_NAME/$_SERVICE_NAME:$COMMIT_SHA'
  - '$_GCR_HOSTNAME/$PROJECT_ID/$_REGISTRY_NAME/$_SERVICE_NAME:latest'
#  - us-central1-docker.pkg.dev /tesla-automation-397321 /test/ mababio
options:
  substitutionOption: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY
substitutions:
  _LABELS: gcb-trigger-id=50277104-eacb-40ac-b445-c845ac5a65cf
  _TRIGGER_ID: 50277104-eacb-40ac-b445-c845ac5a65cf
  _PLATFORM: managed
  _SERVICE_NAME: tesla-automation-platform-prod
  _DEPLOY_REGION: us-central1
#  _GCR_HOSTNAME: us.gcr.io
  _REGISTRY_NAME: test
  _GCR_HOSTNAME: us-central1-docker.pkg.dev
tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - tesla-automation-platform-prodo

